version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_USER=uros
      - POSTGRES_PASSWORD=urospassword
      - POSTGRES_DB=companies_registry
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  angular:
    build:
      context: ./companies-registry-app
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - companiesregistry.api
    networks:
      - backend

  companiesregistry.api:
    build:
      context: .
      dockerfile: CompaniesRegistry.Api/Dockerfile
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=Host=postgres;Port=5432;Database=companies_registry;Username=uros;Password=urospassword
    ports:
      - "8080:8080"
      - "8081:8081"
    networks:
      - backend

networks:
  backend:
    driver: bridge
