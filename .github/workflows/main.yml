name: CI/CD Pipeline
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build & Test .NET + Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Restore dependencies
        run: dotnet restore ./CompaniesRegistry.sln
      - name: Build solution
        run: dotnet build ./CompaniesRegistry.sln --configuration Release
      - name: Run tests
        run: dotnet test ./CompaniesRegistry.sln --verbosity normal
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build Docker images
        run: docker compose -f docker-compose.yml build
      - name: Push Docker images
        if: github.ref == 'refs/heads/main'
        run: docker compose -f docker-compose.yml push
        
  build-angular:
    name: Build Angular App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: companies-registry-app/package-lock.json
      - name: Install dependencies
        working-directory: ./companies-registry-app
        run: npm ci
      - name: Build Angular app
        working-directory: ./companies-registry-app
        run: npm run build -- --configuration=production

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: [build-and-test, build-angular]
    environment:
      name: production
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy .NET API to Render
        run: |
          echo "Triggering .NET API deploy..."
          curl -f -X POST "https://api.render.com/deploy/srv-d3a43iripnbc739a1q2g?key=${{ secrets.RENDER_DEPLOY_KEY }}" \
           -H "Accept: application/json"
      
      - name: Deploy Angular App to Render
        run: |
          echo "Triggering Angular app deploy..."
          curl -f -X POST "https://api.render.com/deploy/srv-d3ao1f7fte5s73dgm2kg?key=${{ secrets.RENDER_ANGULAR_DEPLOY_KEY }}" \
           -H "Accept: application/json"